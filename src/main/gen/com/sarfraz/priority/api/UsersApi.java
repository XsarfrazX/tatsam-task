/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.sarfraz.priority.api;

import com.sarfraz.priority.model.User;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import javax.websocket.server.PathParam;

import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-07-01T20:49:10.499858+05:30[Asia/Calcutta]")
@Validated
@Api(value = "users", description = "the users API")
public interface UsersApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /users : Add priority areas and satisfaction for a username
     *
     * @param user  (required)
     * @return Created a user priority (status code 201)
     *         or Internal Server error if service is not functioning (status code 500)
     *         or Bad request (status code 400)
     *         or Unprocessable entity in case user&#39;s priority already exists (status code 422)
     */
    @ApiOperation(value = "Add priority areas and satisfaction for a username", nickname = "usersPost", notes = "", response = String.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created a user priority", response = String.class),
        @ApiResponse(code = 500, message = "Internal Server error if service is not functioning", response = String.class),
        @ApiResponse(code = 400, message = "Bad request", response = String.class),
        @ApiResponse(code = 422, message = "Unprocessable entity in case user's priority already exists", response = String.class) })
    @PostMapping(
        value = "/users",
        produces = { "application/json", "text/plain" },
        consumes = { "application/json" }
    )
    default ResponseEntity<String> usersPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody User user) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /users/{username} : Return user&#39;s priority details
     *
     * @return A users&#39;s priority (status code 200)
     *         or Internal Server error if service is not functioning (status code 500)
     *         or Bad request (status code 400)
     *         or Not found (status code 404)
     */
    @ApiOperation(value = "Return user's priority details", nickname = "usersUsernameGet", notes = "", response = User.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A users's priority", response = User.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Internal Server error if service is not functioning", response = String.class),
        @ApiResponse(code = 400, message = "Bad request", response = String.class),
        @ApiResponse(code = 404, message = "Not found", response = String.class) })
    @GetMapping(
        value = "/users/{username}",
        produces = { "application/json" , "text/plain" }
    )
    default ResponseEntity<User> usersUsernameGet(@PathVariable String username) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"priorityAreas\" : [ { \"area\" : { \"name\" : \"name\" }, \"statisfaction\" : 6, \"priority\" : 0 }, { \"area\" : { \"name\" : \"name\" }, \"statisfaction\" : 6, \"priority\" : 0 } ], \"username\" : \"username\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
