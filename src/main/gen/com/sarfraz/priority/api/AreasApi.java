/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.sarfraz.priority.api;

import com.sarfraz.priority.model.Area;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-07-01T20:49:10.499858+05:30[Asia/Calcutta]")
@Validated
@Api(value = "areas", description = "the areas API")
public interface AreasApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /areas : Return a list of all priority areas
     *
     * @return An Array of Priority areas (status code 200)
     *         or Internal Server error if service is not functioning (status code 500)
     *         or Bad request (status code 400)
     *         or Not found (status code 404)
     */
    @ApiOperation(value = "Return a list of all priority areas", nickname = "areasGet", notes = "", response = Area.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "An Array of Priority areas", response = Area.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Internal Server error if service is not functioning", response = String.class),
        @ApiResponse(code = 400, message = "Bad request", response = String.class),
        @ApiResponse(code = 404, message = "Not found", response = String.class) })
    @GetMapping(
        value = "/areas",
        produces = { "application/json" ,"text/plain" }
    )
    default ResponseEntity<List<Area>> areasGet() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"name\" : \"name\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /areas : Add a priority area in the database
     *
     * @param area  (required)
     * @return Created a priority area (status code 201)
     *         or Internal Server error if service is not functioning (status code 500)
     *         or Bad request (status code 400)
     *         or Unprocessable entity in case area already exists (status code 422)
     */
    @ApiOperation(value = "Add a priority area in the database", nickname = "areasPost", notes = "", response = String.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created a priority area", response = String.class),
        @ApiResponse(code = 500, message = "Internal Server error if service is not functioning", response = String.class),
        @ApiResponse(code = 400, message = "Bad request", response = String.class),
        @ApiResponse(code = 422, message = "Unprocessable entity in case area already exists", response = String.class) })
    @PostMapping(
        value = "/areas",
        produces = { "application/json", "text/plain" },
        consumes = { "application/json" }
    )
    default ResponseEntity<String> areasPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Area area) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
